!function(a,b){"use strict";"function"==typeof define&&define.amd?define(["backbone","underscore"],function(c,d){return b(a,c||a.Backbone,d||a._)}):"object"==typeof exports?module.exports=b(a,require("backbone"),require("underscore")):b(a,a.Backbone,a._)}(this,function(a,b,c){"use strict";var d=a.localStorage,e=null,f={},g={},h={},i={},j={},k=[],l={pushState:!0,root:"",hashChange:!0,silent:!1,dispatcher:null,authenticated:!1,redirectToLogin:!1,routes:{login:"login",error404:"404",error403:"403"},storePrefix:"backbone-highway",debug:!1,log:function(){this.debug&&a.console&&a.console.log&&a.console.log.apply(a.console,arguments)}};return b.Highway={dispatcher:null,currentRoutes:[],start:function(d){var g=this;this.options=c.extend({},l,d),this.options.routes=c.extend({},l.routes,this.options.routes),this.dispatcher=this.options.dispatcher;var i=c.filter(["trigger"],function(a){return c.isFunction(g.dispatcher[a])});if(c.isEmpty(i))throw"[Backbone.Highway.start] Missing a correctdispatcher object, needs to be an instance of Backbone.Events";this.options.log("[Backbone.Highway.start] Starting router");var j=b.Router.extend(c.extend({},h,{routes:f}));if(e=new j,!b.History.started){this.options.log("[Backbone.Highway.start] Starting Backbone.history ("+(this.options.root?"root: "+this.options.root:"empty root url")+")");var k=b.history.start({pushState:this.options.pushState,root:this.options.root,hashChange:this.options.hashChange,silent:this.options.silent});if(k||this.options.silent){var m=this.getStoredRoute();m&&(this.options.log("[Backbone.Highway] Loaded stored route: "+m),this.clearStore(),this.go({path:m}))}else this.options.log("[Backbone.Highway] Inexisting load route"),this.processControllers(g.options.routes.error404,[g.options.pushState?a.location.pathname.substring(1):a.location.hash.substring(1)])}},map:function(a){c.isFunction(a)?a.call(this):this.options.log("[Backbone.Highway.map] Missing routes definer method as the first param")},route:function(d,k){var l=this,m={},n={},o=d;if(!c.isObject(k))throw"[Backbone.Highway.route] Route definition needs to be an object";k.path&&"/"===k.path.charAt(0)&&(k.path=k.path.substring(1)),k.path&&f[k.path]?d=f[k.path]:(g[k.path]=[],i[d]={re:k.path?b.Router.prototype._routeToRegExp(k.path):null,wrappers:[]},m[k.path]=d,n[d]=function(){l.processControllers(d,arguments)},c.extend(f,m),c.extend(h,n),null!==e&&e.route(k.path,d,n[d])),k.close&&(j[o]=k.close);var p=function(b,d){return d||l.currentRoutes.push(o),!c.isUndefined(k.authenticated)&&(k.authenticated&&!l.options.authenticated||!k.authenticated&&l.options.authenticated)?(l.options.redirectToLogin&&!l.options.authenticated?(l.options.log("[Backbone.Highway] Secured page, redirecting to login"),l.storeCurrentRoute(),l.processControllers(l.options.routes.login)):(l.options.log('[Backbone.Highway] Skipping route "'+o+'", '+(l.options.authenticated?"already ":"not ")+"logged in"),this.processControllers(l.options.routes.error403,[l.options.pushState?a.location.pathname.substring(1):a.location.hash.substring(1)])),!1):c.isString(k.action)?(l.options.log('[Backbone.Highway] Caught alias route: "'+o+'" >> "'+k.action+'"'),l.processControllers(k.action,b,!0),!1):(l.options.log('[Backbone.Highway] Executing route named "'+o+'"'),c.isEmpty(k.before)||l.processTriggers(k.before),c.isFunction(k.action)&&k.action.apply(l,b),void(c.isEmpty(k.after)||l.processTriggers(k.after)))};g[k.path].push(o),i[d].wrappers.push(p),d!==o&&(i[o]={re:null,wrappers:[p]})},go:function(b,d,f){var g=null,h=null;if(c.isObject(b)&&(g=b,b=g.name,h=c.isString(g.path)&&"/"===g.path.charAt(0)?g.path.substring(1):g.path,d=g.args||d),!b&&!h)return this.options.log("[Backbone.Highway.go] Missing parameters, name or path is necessary"),!1;if(!(b&&!this.exists({name:b})||h&&!this.exists({path:h}))){var i=!0,k=this;return c.forEach(this.currentRoutes,function(a){c.isFunction(j[a])&&b!==a&&(i=j[a].call(k,b,d,f))}),i?(this.currentRoutes=[],f=c.extend({trigger:!0,replace:!1},f),h||(h=this.path(b,d)),h!==!1&&e.navigate(h,f),!0):!1}this.options.log("[Backbone.Highway] Inexisting route name: "+b),this.processControllers(this.options.routes.error404,[this.options.pushState?a.location.pathname.substring(1):a.location.hash.substring(1)])},processTriggers:function(a){var b=this;c.isArray(a)?c.forEach(a,function(a){b.processTrigger(a)}):c.isString(a)||c.isObject(a)?this.processTrigger(a):this.options.log("[Backbone.Highway.processTriggers] Bad triggers format, needs to be a string, an object, an array of strings or an array of objects")},processTrigger:function(a){if(c.isObject(a)){var b=[a.name];if(a.cache){var d=this.findCachedTrigger(a);if(d.done)return void this.options.log("[Backbone.Highway] Trigger [ "+a.name+" ] has been skipped (cached)");d.done=!0}if(this.exists({name:a.name}))return void this.processControllers(a.name,a.args||null,!0);c.isArray(a.args)||(a.args=[a.args]),c.forEach(a.args,function(a){b.push(a)}),this.dispatcher.trigger.apply(this.dispatcher,b)}else c.isString(a)?this.exists({name:a})?this.processControllers(a,null,!0):this.dispatcher.trigger.call(this.dispatcher,a):this.options.log("[Backbone.Highway.processTrigger] Bad trigger format, needs to be a string or an object, given: "+typeof a)},processControllers:function(a,b,d){var e=this;d=d||!1,c.isUndefined(b)||c.isNull(b)?b=[]:c.isObject||c.isArray(b)||(b=[b]),i[a]?c.forEach(i[a].wrappers,function(a){a.call(e,b,d)}):this.options.log("[Backbone.Highway.processControllers] Inexisting controller: "+a)},findCachedTrigger:function(a){var b=c.find(k,function(b){return b.name===a.name});return b?b:(k.push(c.extend({},a)),this.findCachedTrigger(a))},clearCache:function(){k=[]},path:function(a,b){var c;for(c in f)if(f[c]===a)return this.parse(c,b);return!1},exists:function(a){if(!c.isObject(a))return!1;if(a.name)return!c.isUndefined(i[a.name]);if(a.path){var b=null;for(b in i)if(i[b].re&&i[b].re.test(a.path))return!0}return!1},parse:function(a,b){if(!c.isArray(b)||c.isEmpty(b))return a;var d=0;return c.map(a.split("/"),function(a){if(":"===a.charAt(0)){var c=b[d];return d+=1,c}return a}).join("/").replace("(","").replace(/\/$/,"")},storeCurrentRoute:function(){var b=this.options.pushState?a.location.pathname:a.location.hash;b=b.substring(1),this.options.log("[Backbone.Highway] Storing current path: "+b),d&&d.setItem("backbone-router:path",b)},getStoredRoute:function(){return d&&d.getItem("backbone-router:path")},clearStore:function(){d&&d.removeItem("backbone-router:path")},on:function(){e.on.apply(e,arguments)},off:function(){e.off.apply(e,arguments)}},b.Highway});
//# sourceMappingURL=backbone.highway.min.map