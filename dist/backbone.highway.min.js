!function(a,b){"use strict";"function"==typeof define&&define.amd?define(["backbone","underscore"],function(c,d){return b(a,c||a.Backbone,d||a._)}):"object"==typeof exports?module.exports=b(a,require("backbone"),require("underscore")):b(a,a.Backbone,a._)}(this,function(a,b,c){"use strict";var d=a.localStorage,e=null,f={},g={},h={},i={},j={},k=[],l={headingSlash:/^(\/|#)/,trailingSlash:/\/$/},m={pushState:!0,root:"",hashChange:!0,silent:!1,dispatcher:null,authenticated:!1,redirectToLogin:!1,routes:{login:"login",error404:"404",error403:"403"},storePrefix:"backbone-highway",debug:!1,log:function(){this.debug&&a.console&&a.console.log&&a.console.log.apply(a.console,arguments)}};return b.Highway={dispatcher:null,currentRoutes:[],start:function(a){var d=this;this.options=c.extend({},m,a),this.options.routes=c.extend({},m.routes,this.options.routes),this.dispatcher=this.options.dispatcher;var g=c.filter(["trigger"],function(a){return c.isFunction(d.dispatcher[a])});if(c.isEmpty(g))throw"[Backbone.Highway.start] Missing a correctdispatcher object, needs to be an instance of Backbone.Events";this.options.log("[Backbone.Highway.start] Starting router");var i=b.Router.extend(c.extend({},h,{routes:f}));if(e=new i,!b.History.started){this.options.log("[Backbone.Highway.start] Starting Backbone.history ("+(this.options.root?"root: "+this.options.root:"empty root url")+")");var j=b.history.start({pushState:this.options.pushState,root:this.options.root,hashChange:this.options.hashChange,silent:this.options.silent});if(j||this.options.silent){var k=this.getStoredRoute();k&&(this.options.log("[Backbone.Highway] Loaded stored route: "+k),this.clearStore(),this.go({path:k}))}else this.options.log("[Backbone.Highway] Inexisting load route"),this.processControllers({name:this.options.routes.error404,args:[b.history.getFragment()]})}},map:function(a){c.isFunction(a)?a.call(this):this.options.log("[Backbone.Highway.map] Missing routes definer method as the first param")},route:function(a,d){var k=this,l={},m={},n=a;if(!c.isObject(d))throw"[Backbone.Highway.route] Route definition needs to be an object";d.path&&(d.path=this.stripHeadingSlash(d.path)),d.path&&f[d.path]?a=f[d.path]:(g[d.path]=[],i[a]={re:c.isString(d.path)?this.routeToRegExp(d.path):null,wrappers:[]},l[d.path]=a,m[a]=function(){k.processControllers({name:a,args:arguments})},c.extend(f,l),c.extend(h,m),null!==e&&e.route(d.path,a,m[a])),d.close&&(j[n]=d.close);var o=function(a,e){return e||k.currentRoutes.push(n),!c.isUndefined(d.authenticated)&&(d.authenticated&&!k.options.authenticated||!d.authenticated&&k.options.authenticated)?(k.options.redirectToLogin&&!k.options.authenticated?(k.options.log("[Backbone.Highway] Secured page, redirecting to login"),k.storeCurrentRoute(),k.processControllers({name:k.options.routes.login})):(k.options.log('[Backbone.Highway] Skipping route "'+n+'", '+(k.options.authenticated?"already ":"not ")+"logged in"),this.processControllers({name:this.options.routes.error403,args:[b.history.getFragment()]})),!1):c.isString(d.action)?(k.options.log('[Backbone.Highway] Caught alias route: "'+n+'" >> "'+d.action+'"'),k.processControllers({name:d.action,args:a},!0),!1):(k.options.log('[Backbone.Highway] Executing route named "'+n+'"'),c.isEmpty(d.before)||k.processTriggers(d.before,a),c.isFunction(d.action)&&d.action.apply(k,a),void(c.isEmpty(d.after)||k.processTriggers(d.after,a)))};g[d.path].push(n),i[a].wrappers.push(o),a!==n&&(i[n]={re:null,wrappers:[o]})},go:function(a,d,f){var g=null,h=null;if(c.isObject(a)&&(g=a,a=g.name,h=c.isString(g.path)&&this.stripHeadingSlash(g.path),d=g.args||d),!a&&!h)return this.options.log("[Backbone.Highway.go] Missing parameters, name or path is necessary"),!1;if(!(a&&!this.exists({name:a})||h&&!this.exists({path:h}))){var i=!0,k=this;return c.forEach(this.currentRoutes,function(b){c.isFunction(j[b])&&a!==b&&(i=j[b].call(k,a,d,f))}),i?(this.currentRoutes=[],f=c.extend({trigger:!0,replace:!1},f),h||(h=this.path(a,d)),h!==!1&&e.navigate(h,f),!0):!1}this.options.log("[Backbone.Highway] Inexisting route name: "+a),this.processControllers({name:this.options.routes.error404,args:[b.history.getFragment()]})},processTriggers:function(a,b){var d=this;c.isArray(a)?c.forEach(a,function(a){d.processTrigger(a,b)}):c.isString(a)||c.isObject(a)?this.processTrigger(a,b):this.options.log("[Backbone.Highway.processTriggers] Bad triggers format, needs to be a string, an object, an array of strings or an array of objects")},processTrigger:function(a,b){if(c.isObject(a)){if(a.path&&(a.name=this.name(a.path)),a.cache){var d=this.findCachedTrigger(a);if(d.done)return void this.options.log("[Backbone.Highway] Trigger [ "+(a.name||a.path)+" ] has been skipped (cached)");d.done=!0}if(c.isUndefined(a.args)||c.isNull(a.args)||c.isArray(a.args)||(a.args=[a.args]),c.isEmpty(a.args)&&(a.args=b),a.name&&this.exists({name:a.name}))return void this.processControllers(a,!0);var e=[a.name];c.forEach(a.args,function(a){e.push(a)}),this.dispatcher.trigger.apply(this.dispatcher,e)}else c.isString(a)?this.exists({name:a})?this.processControllers({name:a,args:b},!0):this.dispatcher.trigger.call(this.dispatcher,a):this.options.log("[Backbone.Highway.processTrigger] Bad trigger format, needs to be a string or an object, given: "+typeof a)},processControllers:function(a,b){var d=this,e=a.name,f=a.args;b=b||!1,i[e]?(a.path&&(f=this.extractParameters(e,a.path),1===f.length&&null===f[0]&&(f=a.args)),c.isUndefined(f)||c.isNull(f)?f=[]:c.isObject(f)||c.isArray(f)||(f=[f]),c.forEach(i[e].wrappers,function(a){a.call(d,f,b)})):this.options.log("[Backbone.Highway.processControllers] Inexisting controller: "+e)},findCachedTrigger:function(a){var b=c.find(k,function(b){return b.name===a.name});return b?b:(k.push(c.extend({},a)),this.findCachedTrigger(a))},clearCache:function(){k=[]},path:function(a,b){var c;for(c in f)if(f[c]===a)return this.parse(c,b);return!1},name:function(a){var b;a=this.stripHeadingSlash(a);for(b in i)if(i[b].re&&i[b].re.test(a))return b;return!1},exists:function(a){return c.isObject(a)?a.name?!c.isUndefined(i[a.name]):c.isString(a.path)?this.name(a.path):!1:!1},parse:function(a,b){if(!c.isArray(b)||c.isEmpty(b))return a;var d=0;return c.map(a.split("/"),function(a){if(":"===a.charAt(0)){var c=b[d];return d+=1,c}return a}).join("/").replace("(","").replace(l.trailingSlash,"")},storeCurrentRoute:function(){var a=b.history.getFragment();this.options.log("[Backbone.Highway] Storing current path: "+a),d&&d.setItem("backbone-router:path",a)},getStoredRoute:function(){return d&&d.getItem("backbone-router:path")},clearStore:function(){d&&d.removeItem("backbone-router:path")},stripHeadingSlash:function(a){return a.replace(l.headingSlash,"")},extractParameters:function(a,c){return b.Router.prototype._extractParameters(i[a].re,this.stripHeadingSlash(c))},routeToRegExp:function(a){return b.Router.prototype._routeToRegExp(a)},on:function(){e.on.apply(e,arguments)},off:function(){e.off.apply(e,arguments)}},b.Highway});
//# sourceMappingURL=backbone.highway.min.map